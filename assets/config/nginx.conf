user nginx;
worker_processes auto;

pid /var/run/nginx.pid;

worker_rlimit_nofile 8192;
events {
    worker_connections 2048;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format ltsv "time:$time_local"
    "\thost:$remote_addr"
    "\tforwardedfor:$http_x_forwarded_for"
    "\treq:$request"
    "\tstatus:$status"
    "\tmethod:$request_method"
    "\turi:$request_uri"
    "\tsize:$body_bytes_sent"
    "\treferer:$http_referer"
    "\tua:$http_user_agent"
    "\treqtime:$request_time"
    "\tcache:$upstream_http_x_cache"
    "\truntime:$upstream_http_x_runtime"
    "\tapptime:$upstream_response_time"
    "\tvhost:$host";

    access_log /var/log/nginx/access.log ltsv;
    error_log /var/log/nginx/error.log;
    # access_log off;
    # error_log /dev/null crit;

    # ファイルのメタデータのキャッシュ
    # inactive=60s がデフォルト
    open_file_cache max=1000;
    open_file_cache_errors on;

    # sendfile (2) でファイルを返却
    # 動かないこともある
    sendfile on;
    # sendfile が有効の場合のみ
    # sending the response header and the beginning of a file in one packet
    tcp_nopush on;
    tcp_nodelay on;

    # 非同期 I/O
    # デフォルトのスレッドプールは十分大きい
    aio threads;

    proxy_cache_path /var/cache/nginx keys_zone=CACHE:10m max_size=1g inactive=1d use_temp_path=off;

    proxy_request_buffering off;
    proxy_buffer_size 8k;

    keepalive_timeout 65;

    gzip on;
    gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
    # Content-Length で判断
    gzip_min_length 1024;
    # 無効化する UA
    gzip_disable "msie6";
    # 1-9 (default: 1)
    gzip_comp_level 2;
    # 圧縮済みのファイルがあればそれを返す
    gzip_static on;
    # 前段にキャッシュサーバーがあれば on
    # default: off
    gzip_vary off;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_protocols TLSv1.2 TLSv1.3;

    # TLS Session の再開
    ssl_session_tickets on;

    # サーバーが証明書の状態を取得
    ssl_stapling on;
    # 本来は on が望ましい
    ssl_stapling_verify off;
    # verify が on で, ssl_certificate に中間証明書が含まれない場合に必要
    # ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    resolver 1.1.1.1 1.0.0.1 valid=30s;

    server {
        listen 80;

        location /status {
            stub_status on;
        }
    }
}